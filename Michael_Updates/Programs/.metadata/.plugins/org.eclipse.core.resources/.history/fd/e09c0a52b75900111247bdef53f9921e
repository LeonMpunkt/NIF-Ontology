import java.io.*;
import java.util.*;
import java.util.Scanner;
import java.io.File;

/**
 * TextFileReader class
 * 
 * @author Michael Aranda
 * @param textfile to read, textfile to print output to
 * @data last modified: February 01, 2012
 */

public class TextFileReader{
	
	/**
	 * main method takes 2 paramaters: file to be read and file to print to
	 */
	public static void main(String[] args){
		
		try{
			BufferedReader in = new BufferedReader(new FileReader(args[0]));
			
			FileWriter outFile = new FileWriter(args[1]);
			PrintWriter out = new PrintWriter(outFile);
			ArrayList<String> labelList = new ArrayList<String>();
			fillArrayList(labelList, 18);
					
			//Code below added specifically for file CNO_0.2.3.obo on Feb.1, 2012
			out.print("id,name,namespace,comment,is_a,definition,externalSourceURI,synonym," +
					"is_metadata_tag,hasComponent,isComponentOf,hasParameter," +
					"hasParameterValue, isParameterValueOf, hasVariable, isVariableOf," +
					"hasBiologicalCorrelate, isBiologicalCorrelateOf");
			out.println();		
			
			/* Line has been read in, 3 cases
			 * 	1. Line -> [Term] or [Typedef]
			 *  2. Line -> label: ...
			 *  3. Line -> Anything else
			 *  
			 *  Case 1: 
			 *    i. Print out contents of labelList as new line in CSV output file.
			 *    ii. Clear contents of labelList.
			 *  Case 2: 
			 *    i. Add everything after "label:" to index in labelList corresponding
			 *       to label (e.g. "id" -> 0, "namespace" -> 1, etc.)
			 *  Case 3:
			 *    i. Skip.
			 */
			String line;
			
			while((line = in.readLine()) != null){
				
				int indexOfColon = line.indexOf(':');
				
				//Case 1
				if(line.equals("[Term]") || line.equals("[Typedef]")){
					printTermValues(labelList, out);
				}
				
				//Case 2
				else if(indexOfColon > 0){			
					
					String label = line.substring(0,indexOfColon);
					String entry = line.substring(indexOfColon+1);
					int indexToAdd = 0;
					
					if(label.equals("id")){
						indexToAdd = 0;
					}
					if(label.equals("name")){
						indexToAdd = 1;
					}
					if(label.equals("namespace")){
						indexToAdd = 2;
					}
					if(label.equals("comment")){
						indexToAdd = 3;
					}
					if(label.equals("is_a")){
						indexToAdd = 4;
					}
					if(label.equals("definition")){
						indexToAdd = 5;
					}
					if(label.equals("externalSourceURI")){
						indexToAdd = 6;
					}
					if(label.equals("synonym")){
						indexToAdd = 7;
					}
					if(label.equals("is_metadata_tag")){
						indexToAdd = 8;
					}
					if(label.equals("relationship")){
						String[] splitArray = entry.trim().split(" ");
						indexToAdd = findIndexOfRelationship(splitArray[0]);
						entry = splitArray[1];
					}

					//check if this is the first entry into this index of the labelList ArrayList
					if(labelList.get(indexToAdd) != null){
						labelList.add(indexToAdd, labelList.get(indexToAdd) + ";");
					}
					if(labelList.get(indexToAdd) != null)
						labelList.add(indexToAdd, labelList.get(indexToAdd) + entry);
					else
						labelList.add(indexToAdd, entry);
				}
	
			}
		
			printTermValues(labelList, out);
			out.close();
		} catch (IOException e){
			e.printStackTrace();
		}
		
	}
	
	public static void fillArrayList(ArrayList<String> list, int size){
		for(int i = 0; i < size; i++){
			list.add(null);
		}
	}
	
	public static void printTermValues(ArrayList<String> list, PrintWriter fout){
		for(String s : list){
			if(s != null){
				fout.print(s);
				fout.print(",");
			}
			else if(s == null){
				fout.print(",");
			}
		}
		list.clear();
		fillArrayList(list, 18);
		fout.println();
	}
	
	public static int findIndexOfRelationship(String s){
		if(s.equals("cno_0000005")){
			return 9;
		}
		if(s.equals("cno_0000006")){
			return 10;
		}
		if(s.equals("cno_0000063")){
			return 10;
		}
		if(s.equals("cno_0000064")){
			return 11;
		}
		if(s.equals("cno_0000180")){
			return 12;
		}
		if(s.equals("cno_0000181")){
			return 13;
		}
		if(s.equals("cno_0000202")){
			return 14;
		}
		if(s.equals("cno_0000203")){
			return 15;
		}
		if(s.equals("cno_0000204")){
			return 16;
		}
		if(s.equals("cno_0000205")){
			return 17;
		}

		return 0;
	}

}